name: CMake

on: [push,pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      fail-fast: false
      matrix:
        instruction_set_flag: ["SSE4_1", "AVX", "AVX2"]
        #fastest way to get gcc, clang and msvc
        os: [ubuntu-latest, macos-latest] # windows not supported yet by us
        include:
          - os: macos-latest
            cxx_compiler: "$(brew --prefix llvm)/bin/clang++"
            c_compiler: "$(brew --prefix llvm)/bin/clang"
          - os: ubuntu-latest
            cxx_compiler: "g++"
            c_compiler: "gcc"



    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      env:
        CC: ${{ matrix.c_compiler }}
        CXX: ${{ matrix.cxx_compiler }}
      run: cmake -E make_directory ${{runner.workspace}}/build

      

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        CC: ${{ matrix.c_compiler }}
        CXX: ${{ matrix.cxx_compiler }}
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE  -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDISTOPIA_USE_${{ matrix.instruction_set_flag }}=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      env:
        CC: ${{ matrix.c_compiler }}
        CXX: ${{ matrix.cxx_compiler }}
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build .  --config $BUILD_TYPE  

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
